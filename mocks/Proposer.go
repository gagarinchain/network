// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import blockchain "github.com/gagarinchain/network/blockchain"
import hotstuff "github.com/gagarinchain/network/hotstuff"
import mock "github.com/stretchr/testify/mock"

// Proposer is an autogenerated mock type for the Proposer type
type Proposer struct {
	mock.Mock
}

// CheckConsensus provides a mock function with given fields:
func (_m *Proposer) CheckConsensus() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// FinishQC provides a mock function with given fields: header
func (_m *Proposer) FinishQC(header *blockchain.Header) {
	_m.Called(header)
}

// OnPropose provides a mock function with given fields:
func (_m *Proposer) OnPropose() {
	_m.Called()
}

// OnReceiveVote provides a mock function with given fields: vote
func (_m *Proposer) OnReceiveVote(vote *hotstuff.Vote) error {
	ret := _m.Called(vote)

	var r0 error
	if rf, ok := ret.Get(0).(func(*hotstuff.Vote) error); ok {
		r0 = rf(vote)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
