// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import common "github.com/gagarinchain/network/common"
import hotstuff "github.com/gagarinchain/network/hotstuff"
import mock "github.com/stretchr/testify/mock"

// Pacer is an autogenerated mock type for the Pacer type
type Pacer struct {
	mock.Mock
}

// FireEvent provides a mock function with given fields: event
func (_m *Pacer) FireEvent(event hotstuff.Event) {
	_m.Called(event)
}

// GetCurrent provides a mock function with given fields:
func (_m *Pacer) GetCurrent() *common.Peer {
	ret := _m.Called()

	var r0 *common.Peer
	if rf, ok := ret.Get(0).(func() *common.Peer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*common.Peer)
		}
	}

	return r0
}

// GetCurrentView provides a mock function with given fields:
func (_m *Pacer) GetCurrentView() int32 {
	ret := _m.Called()

	var r0 int32
	if rf, ok := ret.Get(0).(func() int32); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int32)
	}

	return r0
}

// GetNext provides a mock function with given fields:
func (_m *Pacer) GetNext() *common.Peer {
	ret := _m.Called()

	var r0 *common.Peer
	if rf, ok := ret.Get(0).(func() *common.Peer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*common.Peer)
		}
	}

	return r0
}

// ProposerForHeight provides a mock function with given fields: blockHeight
func (_m *Pacer) ProposerForHeight(blockHeight int32) *common.Peer {
	ret := _m.Called(blockHeight)

	var r0 *common.Peer
	if rf, ok := ret.Get(0).(func(int32) *common.Peer); ok {
		r0 = rf(blockHeight)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*common.Peer)
		}
	}

	return r0
}

// SubscribeProtocolEvents provides a mock function with given fields: sub
func (_m *Pacer) SubscribeProtocolEvents(sub chan hotstuff.Event) {
	_m.Called(sub)
}
