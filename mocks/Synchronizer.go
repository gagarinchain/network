// Code generated by mockery v2.0.0-alpha.2. DO NOT EDIT.

package mocks

import (
	context "context"

	common "github.com/gagarinchain/common"

	ethcommon "github.com/gagarinchain/common/eth/common"

	mock "github.com/stretchr/testify/mock"
)

// Synchronizer is an autogenerated mock type for the Synchronizer type
type Synchronizer struct {
	mock.Mock
}

// LoadBlocks provides a mock function with given fields: ctx, low, high, peer
func (_m *Synchronizer) LoadBlocks(ctx context.Context, low int32, high int32, peer *common.Peer) error {
	ret := _m.Called(ctx, low, high, peer)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int32, int32, *common.Peer) error); ok {
		r0 = rf(ctx, low, high, peer)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// LoadFork provides a mock function with given fields: ctx, headHeight, head, peer
func (_m *Synchronizer) LoadFork(ctx context.Context, headHeight int32, head ethcommon.Hash, peer *common.Peer) error {
	ret := _m.Called(ctx, headHeight, head, peer)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int32, ethcommon.Hash, *common.Peer) error); ok {
		r0 = rf(ctx, headHeight, head, peer)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
